[
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "when": "(!editorTextFocus && !parameterHintsVisible) || (editorTextFocus && vim.mode == 'Normal' && !parameterHintsVisible)"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "(!editorTextFocus && !parameterHintsVisible) || (editorTextFocus && vim.mode == 'Normal' && !parameterHintsVisible)"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "(!editorTextFocus && !parameterHintsVisible) || (editorTextFocus && vim.mode == 'Normal' && !parameterHintsVisible)"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "(!editorTextFocus && !parameterHintsVisible) || (editorTextFocus && vim.mode == 'Normal' && !parameterHintsVisible)"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.moveEditorToAboveGroup",
        "when": "(!editorTextFocus && !parameterHintsVisible) || (editorTextFocus && vim.mode == 'Normal' && !parameterHintsVisible)"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.moveEditorToBelowGroup",
        "when": "(!editorTextFocus && !parameterHintsVisible) || (editorTextFocus && vim.mode == 'Normal' && !parameterHintsVisible)"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.moveEditorToLeftGroup",
        "when": "(!editorTextFocus && !parameterHintsVisible) || (editorTextFocus && vim.mode == 'Normal' && !parameterHintsVisible)"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.moveEditorToRightGroup",
        "when": "(!editorTextFocus && !parameterHintsVisible) || (editorTextFocus && vim.mode == 'Normal' && !parameterHintsVisible)"
    },
    {
        "key": "ctrl+right",
        "command": "workbench.action.increaseViewWidth",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+up",
        "command": "workbench.action.increaseViewHeight",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.decreaseViewHeight",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+left",
        "command": "workbench.action.decreaseViewWidth",
        "when": "editorTextFocus"
    },
    {
        "key": "tab",
        "command": "-acceptSelectedSuggestion",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion && vim.mode == 'Insert'"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "jumpToNextSnippetPlaceholder",
        "when": "hasNextTabstop && inSnippetMode && textInputFocus && vim.mode == 'Insert'"
    },
    {
        "key": "tab",
        "command": "-jumpToNextSnippetPlaceholder",
        "when": "hasNextTabstop && inSnippetMode && textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "jumpToPrevSnippetPlaceholder",
        "when": "hasPrevTabstop && inSnippetMode && textInputFocus && vim.mode == 'Insert'"
    },
    {
        "key": "shift+tab",
        "command": "-jumpToPrevSnippetPlaceholder",
        "when": "hasPrevTabstop && inSnippetMode && textInputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "acceptSelectedSuggestion",
        "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+f9",
        "command": "editor.debug.action.conditionalBreakpoint",
        "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
    },
    {
        "key": "shift+f9",
        "command": "workbench.debug.viewlet.action.removeAllBreakpoints"
    },
    {
        "key": "ctrl+j",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible && (vim.mode == 'Insert' || vim.mode == 'Normal')"
    },
    {
        "key": "ctrl+k",
        "command": "showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible && (vim.mode == 'Insert' || vim.mode == 'Normal')"
    },
    {
        "key": "ctrl+j",
        "command": "quickInput.next",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+k",
        "command": "quickInput.previous",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "d",
        "command": "deleteFile",
        "when": "filesExplorerFocus && !inputFocus"
    }
]
